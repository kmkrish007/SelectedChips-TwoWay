/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "_content/Syncfusion.Blazor/scripts/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./bundles/sf-textbox.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./bundles/sf-textbox.js":
/*!*******************************!*\
  !*** ./bundles/sf-textbox.js ***!
  \*******************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_sf_textbox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/sf-textbox.js */ "./modules/sf-textbox.js");
/* harmony import */ var _modules_sf_textbox_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_sf_textbox_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "./modules/sf-textbox.js":
/*!*******************************!*\
  !*** ./modules/sf-textbox.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

window.sfBlazor = window.sfBlazor || {};

window.sfBlazor.TextBox = function () {
  'use strict';
  /**
   * Blazor texbox interop handler
   */

  var BLUR = 'blur';
  var MOUSE_DOWN = 'mousedown';
  var MOUSE_UP = 'mouseup';
  var INPUT_GROUP = 'e-input-group-icon';
  var DISABLED = 'e-disabled';
  var RIPPLE_BTN = 'e-input-btn-ripple';

  var SfTextBox =
  /** @class */
  function () {
    function SfTextBox(element, dotnetRef, containerEle) {
      this.element = element;
      this.container = containerEle;
      this.element.blazor_input_instance = this;
      this.dotNetRef = dotnetRef;
      this.isDestroyed = false;
    }

    SfTextBox.prototype.initialize = function () {
      sf.base.EventHandler.add(this.element, BLUR, this.blurHandler, this);
      var buttons = this.container ? this.container.querySelectorAll('.' + INPUT_GROUP) : null;

      if (buttons && buttons.length > 0) {
        for (var index = 0; index < buttons.length; index++) {
          sf.base.EventHandler.add(buttons[index], MOUSE_DOWN, this.onMouseDownRipple, this);
          sf.base.EventHandler.add(buttons[index], MOUSE_UP, this.onMouseUpRipple, this);
        }
      }
    };

    SfTextBox.prototype.onMouseDownRipple = function (args) {
      var button = args ? args.currentTarget : null;

      if (button && !this.container.classList.contains(DISABLED) && !this.container.querySelector('input').readOnly) {
        button.classList.add(RIPPLE_BTN);
      }
    };

    SfTextBox.prototype.onMouseUpRipple = function (args) {
      var button = args ? args.currentTarget : null;

      if (button) {
        setTimeout(function () {
          button.classList.remove(RIPPLE_BTN);
        }, 500);
      }
    };

    SfTextBox.prototype.blurHandler = function () {
      if (!this.isDestroyed) {
        // tslint:disable
        this.dotNetRef.invokeMethodAsync('BlurHandler')["catch"](function () {});
      } else {
        sf.base.EventHandler.remove(this.element, BLUR, this.blurHandler);
      }
    };

    SfTextBox.prototype.destroy = function () {
      sf.base.EventHandler.remove(this.element, BLUR, this.blurHandler);
    };

    return SfTextBox;
  }(); // tslint:disable


  var TextBox = {
    initialize: function initialize(element, dotnetRef, containerEle) {
      if (element) {
        new SfTextBox(element, dotnetRef, containerEle);
      }

      if (element && element.blazor_input_instance) {
        element.blazor_input_instance.initialize();
      }
    },
    focusIn: function focusIn(element) {
      element.focus();
    },
    focusOut: function focusOut(element) {
      element.blur();
    },
    destroyInput: function destroyInput(element) {
      if (element && element.blazor_input_instance) {
        element.blazor_input_instance.isDestroyed = true;
        element.blazor_input_instance.destroy();
      }
    }
  };
  return TextBox;
}();

/***/ })

/******/ });