/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "_content/Syncfusion.Blazor/scripts/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./bundles/sf-calendarbase.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./bundles/sf-calendarbase.js":
/*!************************************!*\
  !*** ./bundles/sf-calendarbase.js ***!
  \************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_sf_calendarbase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/sf-calendarbase.js */ "./modules/sf-calendarbase.js");
/* harmony import */ var _modules_sf_calendarbase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_sf_calendarbase_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "./modules/sf-calendarbase.js":
/*!************************************!*\
  !*** ./modules/sf-calendarbase.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

window.sfBlazor = window.sfBlazor || {};

window.sfBlazor.CalendarBase = function () {
  'use strict'; // tslint:disable

  var calendarBase = {
    initialize: function initialize(element, dotnetRef, keyConfig, value, multiSelection) {
      var defaultKeyConfig = {
        controlUp: 'ctrl+38',
        controlDown: 'ctrl+40',
        moveDown: 'downarrow',
        moveUp: 'uparrow',
        moveLeft: 'leftarrow',
        moveRight: 'rightarrow',
        select: 'enter',
        home: 'home',
        end: 'end',
        pageUp: 'pageup',
        pageDown: 'pagedown',
        shiftPageUp: 'shift+pageup',
        shiftPageDown: 'shift+pagedown',
        controlHome: 'ctrl+home',
        controlEnd: 'ctrl+end',
        altUpArrow: 'alt+uparrow',
        spacebar: 'space',
        altRightArrow: 'alt+rightarrow',
        altLeftArrow: 'alt+leftarrow'
      };
      defaultKeyConfig = sf.base.extend(defaultKeyConfig, keyConfig);
      new sf.base.KeyboardEvents(element, {
        eventName: 'keydown',
        keyAction: this.keyActionHandle.bind(this, value, multiSelection, dotnetRef),
        keyConfigs: defaultKeyConfig
      });
    },
    keyActionHandle: function keyActionHandle(value, multiSelection, dotnetRef, e) {
      e.preventDefault();
      var element = sf.base.closest(e.target, '.' + 'e-calendar');
      var tableBodyElement = element.querySelector('tbody');

      if (!tableBodyElement) {
        return;
      }

      multiSelection = false;
      var focusedDate = tableBodyElement.querySelector('tr td.e-focused-date');
      var selectedDate;

      if (multiSelection) {
        selectedDate = !focusedDate && +value === parseInt(focusedDate.getAttribute('id').split('_')[0], 10) ? focusedDate : tableBodyElement.querySelector('tr td.e-selected');
      } else {
        selectedDate = tableBodyElement.querySelector('tr td.e-selected');
      }

      tableBodyElement.focus();
      var targetEle = e.target;
      var args = {
        Action: e.action,
        Key: e.key,
        Events: e,
        SelectDate: selectedDate ? selectedDate.id : null,
        FocusedDate: focusedDate ? focusedDate.id : null,
        classList: selectedDate ? selectedDate.classList.toString() : focusedDate ? focusedDate.classList.toString() : 'e-cell',
        Id: focusedDate ? focusedDate.id : selectedDate ? selectedDate.id : null,
        TargetClassList: targetEle.classList.toString()
      };
      dotnetRef.invokeMethodAsync('OnCalendarKeyboardEvent', args);

      if (targetEle.classList.contains('e-today')) {
        targetEle.blur();
        tableBodyElement.focus();
      }
    }
  };
  return calendarBase;
}();

/***/ })

/******/ });